import ts from "typescript";
import express from "express";
declare class MockServerOptions {
    /** Enable/disable console.log */
    verbose: boolean;
    /** Port for webpack-mock-server */
    port: number;
    /** Enable/disable console.log for requests */
    logRequests: boolean | ((req: express.Request) => void);
    /** Enable/disable console.log for reponses */
    logResponses: boolean | ((res: express.Response) => void);
    /** Execute custom middleware prior to all other middleware internally within the server */
    before: express.RequestHandler | undefined;
    /** Typescript compiler options that override options from 'tsconfig.json' */
    compilerOptions: ts.CompilerOptions;
    /** Must-have Typescript compiler options (impossible to override) */
    get strictCompilerOptions(): ts.CompilerOptions;
    /** Typescript config file (used for compilation [entry] files) */
    tsConfigFileName: string;
    /**
     * Entry points for typescript-compiler
     * If pointed an 'empty array' or 'undefined' entry will be defined
     * from [tsConfigFileName]: 'files','include' and 'exclude' sections
     */
    entry: string | string[] | undefined;
}
export default MockServerOptions;
export declare const defOptions: MockServerOptions;
